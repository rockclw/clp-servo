<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="Im`b*Dss2S3te$TRd7M#" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="k^EmC}=Z?}+.SdxhuIpH" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace clpRobotArmServo{" line1="    export enum Servos{" line2="        baseServo  = 0," line3="        clawTurnServo = 1," line4="        clawServo = 2" line5="    }" line6="" line7="    function toServo(servo: Servos): robotbit.Servos{" line8="        switch (servo){" line9="            case Servos.baseServo: return robotbit.Servos.S1;" line10="            case Servos.clawTurnServo: return robotbit.Servos.S2;" line11="            default: return robotbit.Servos.S3;" line12="        }" line13="    }" line14="    " line15="    export enum direction{" line16="        anticlockwise = 0," line17="        clockwise = 1" line18="    }" line19="    " line20="    let ServoAngle:number[] = [0,0,0];" line21="    let ServoMaxAngle:number[] = [145,180,80];" line22="    " line23="    function setDir(dir: direction): number{" line24="        if (dir == direction.clockwise){" line25="            return 1;" line26="        }" line27="            return -1;" line28="    }" line29="    " line30="    function getFinalAngle(servo: Servos, degree: number, dir: direction): number{" line31="    " line32="        let deg = ServoAngle[servo] +  degree * setDir(dir);" line33="        if (deg &gt; ServoMaxAngle[servo]){" line34="            return ServoMaxAngle[servo];" line35="        }" line36="        else if (deg &lt; 0){" line37="            return 0;" line38="        }" line39="        return deg;" line40="    }" line41="    " line42="    //% blockId=servo_turn block=&quot;Servo|%servo| turn |%dir by |%degree degree&quot;" line43="    //% degree.min=0 degree.max=180" line44="    //% name.fieldEditor=&quot;gridpicker&quot; name.fieldOptions.columns=3" line45="    export function turn(servo: Servos, dir: direction, degree: number): void {" line46="        ServoAngle[servo] = getFinalAngle(servo, degree, dir);" line47="        robotbit.Servo(toServo(servo), ServoAngle[servo]);" line48="    }" line49="    " line50="    //% blockId=servo_showangle block=&quot;Servo|%servo| show angle&quot;" line51="    //% name.fieldEditor=&quot;gridpicker&quot; name.fieldOptions.columns=3" line52="    export function showAngle(servo: Servos): void{" line53="        basic.showNumber(ServoAngle[servo]);" line54="    }" line55="    " line56="    //% blockId=servo_getangle block=&quot;angle of Servo|%servo|&quot;" line57="    //% name.fieldEditor=&quot;gridpicker&quot; name.fieldOptions.columns=3" line58="    export function getAngle(servo: Servos): number{" line59="        return ServoAngle[servo];" line60="    }" line61="}" numlines="62"></mutation></block></statement></block></xml>